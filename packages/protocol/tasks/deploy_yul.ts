const hre = require("hardhat");
const fs = require("fs");
const { spawn, spawnSync } = require("node:child_process");

async function compilePlonkVerifier(callback: any) {
    const SOLC_COMMAND = "./bin/solc-static-linux";

    // download solc if not exist.
    if (!fs.existsSync(SOLC_COMMAND)) {
        console.log("downloading solc ...");
        spawnSync("tasks/download_solc.sh");
        console.log("download finished.");
    }

    const sourceFile = "contracts/test/yul/PlonkVerifier.yulp";

    const compile = spawn(SOLC_COMMAND, ["--yul", "--bin", sourceFile]);

    let output = "";
    compile.stdout.on("data", (data: any) => {
        output += data.toString();
    });

    compile.on("exit", async (code: any) => {
        const lines = output.split("\n");
        const tag = "Binary representation:";
        let next = false;
        for (const line of lines) {
            if (next) {
                return await callback(line);
            }

            if (line === tag) {
                next = true;
            }
        }
    });
}

async function testVerifier(verifierAddr: string) {
    const calldata =
        "0x2a402b5e5b05620349122649050a17567222262a7c38016b0b1f660444164669181f40213d2b03370570414030193c252f7642637b235170402856247709623a00000000000000000000000000000000000000000000000000000000000005390000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000029555f054b460e510908253b6c471871653e7e7b18692f1039022729230242120b17501e143c671c60515e0b765b7f3e466a08054d51003f21013d6063453e171b4f4278627c62251a34385a3d0d53582e4b2e5d2c0f1c014770043d28365d3b1c360743433b3e16513b50364c20124d660955625657275a555c5c2f0b27792b0a600b486077496763565a59745f422f037c7f4b012c375c6f0a15501b261143260906102641642b602f0a0374702743340556425f593d5f61540169387e69492a672e73426d390a543a2f083c2d1e520d04582a04482c606d7577553a741a1a2a71324c5a346111592c1f0d6d1f4c167163251c511e7e184b740d5d3d153908003f7577072d043906371d7e45487e3d7a1820606c312c24402a1e0a41220f2c017d0d1f1c3c1558402058015e5d04196421376d4d334e5f3b7c136d114b026c2c1e602c1a5742251b092a124f382a20721668416369075f2c5c03703e0d1f7816540e4752050a2b5c3226632e54422b421457645b3b7d1a75714d00600f0e7607565614777e7e3d3674142f32086c761e151a642c120b11387e196a7c70613e151c3c66787a2a5f7e6c0e1c40124323085273480d4023331d012a32673209240a30703814366d3077637a5c1a67586b1e555a7b4929353d435b3411781f4f0f0c303519351c522c771e6753094f012a7f59097d6545305a4e2e72031f680553180a32015e52011a205b200f31206e146f09572d773c4476364f56050741016c0f394b5411553a441b475a5e4124072e6a5f6d5e4a6840527d600f486e20655801300d514b06762d03500305315b4f4743171837417d6e2d4f150740380d115000047d5f5e5e6a112b4a48444d0b4a362f241769613162541d2e620f5c7e6e0007283a6a3a10454765086e6b5517167a515b18260761486f3b0a53793f7f5e3106630e59494f22675519287e3c576c72045a506b180a5d2a314c52157f2973002771384b5004007f1666072c0e6d637c0a6e2b770e75074f042119083c095c07262b482901240216143122394c263f645d2356217620657b5c5b50307a25155308053e0a1c32092a5e3e5820732b7446702d034a6c65241d36314528625b3b51131a522e2209713d1208604e6a11436e644d7479461b0138515f0c494558520d1f45687f58185f5f515562221d07681278726460040c79283f541b214216775b2d5d0e7d2e6a7957667e6e172d786e58504a295c2d7c5a2816402002677d4b2b0f275279766b7c540844615a0f762450273049265775752a730a5916690c533c2c5737185e3277533716145652252c6152403d782a4c64434f524b71156b06752a5b1b376d2826050d6e29694e6d537b4053730472443f217218414646190411131442745a3a58561d42291e257708040e0e3d354b0f1b1f371a4b65622a301d1a22430b7c70302e487d6041143f2c754c350159206849334b60705638273e15286a03752047020f2b2204240a2e731f277530161a066554481e123a414c08061b2929435b3e00601801381d316864624f7126017143601d0d0c581549690e050d5b03735073322167382e211d722b17091c3f1f232a0a3b21721d3b701f474d273857734f5116380604027e5805605c547f1d7e6a545e376d34555f461346071e043a60571e4d3e6334104e274b761d2e74221f4d7b71170f23562875367045211158211d08601b40221456714437750a18664e1c11155f6d195e1a723d636b2446323d3601276c2711035f236f00187c28512c75167c2812481e7e3a6b5305145c7339195b181c59087b0558625508254b456a31476a101f3167751c4d277302255e411a4d7b713b53430c0b544d2d0318512c1f7540596725100e494b020f1a5e521d27021f7c47070f680b10021c774d2876626422351017637d1a652079175a026d7d462922063505542b0a787f62667e2127415d4a6c0b63784f24304c203175263b1b412d6b30246f0e52127f080d396e224b19371f747238060309662e2b5c5056714b1b142d22693a1f77597d11405833484b3e03564c20001b4e551d206d627d2d31120c4c463c51736b67174f0a0826466b3e7d440a491139680b216d3a0c4c0e34264263243e5a296267725b3f2757526b6c3c142d2d6b55555a196c5924422e0f40136b7b000c137055192964055277030f2f617d5f2836396925577d6f0f0d2d28450e29516f102055235d351861343a4d596d7c502527064218396d7a67627063353f31395b5e530e180c041858472d0d19193c156839522e281c753e1763414c347b4306442f46181c49693a14692363214a08172f6417731404377456122d6b78636a610c2846092275662f20643c6d7519681b5c2f4403282529397a676e0a273917094c765d40121601444b0435333c4f79724a4f7a57282b2a27202c1d463c1d6f73705d40002849174d7d552e5b660f65246e6c76731d162c57191d3f186e72696168767e350d682f13257e150c5721055a0b5d112c07001e7e2210117e7e55557c7016042a55795153312630120a7e1a07563879132d7365340e7b134b1e4341680948485d79101d4125080f1c09335851347e2e7c012208477c62300b5d0607315d4037672d551b380a3e76374b187f115c5a1f7306265a62275920685f77372a0b2e3d2e1d16037e4f63122e19550b3e5c7a1f01026828457e0610561d350216600639747d46121b2a75426d730035393f74250b1e3903303c60201d676f5761395d084d6d0f7d2739073f092c27302a4f6b16081c173803013d700737584b193f10701c203c41184732374135362340651879141e54172e236c3b206830124d0b5c5c42047d326d7e11746b2c08692736104972085a7d32387c1e235d764f6f561f0e721d0a693d5058432743237f7f0a0564492f04287831462d040a741e177949561e13403925657737683464717a2964373d0447421d450f6f641d0d19702a2c30716d25041f781b2b621a547d0157537a2c291e66284e124c1826037833717c372b6c390a5c4b086d213d13057b6919381827324c695c4e462c070557436074091510274d49667a066d077e1568247947331f0d75504b352860516d426a7c347c435765681f656a382313774f7479656e570b74313a6d51135e7579686c12407e78765d1c4712544b6d0e0c020036501c670631610f3668356622311b031d4d4237146420597718073d48264c3c5102657c0b18662f1b17270867282a764e0203182f416641124c195b3e043f2b75747e3a1f6a49086d6d370f69522301237b3137266936164b5d61656948642d76480578010a494e2d033b48771d140e2b16751c3405352a13533012143775317c414a26062e1932332b1d171a650a0f0c0072787c39451f2126505c493e710d217d556f2a3f3b5c6078752973650e53061374304e7626480a47743e002d37632f717a3c101a6c5f7d34746d7e3860456f737e57660b1d4c494d373e330a4827206471240c555e1e3f060f222a6524167916382e1f013163607247666b7770236e67667e2e1a6a350a3c58125964195108652d02357279316d4d157a270900455f3c7876091d466f0666173d6e740d5f08437a165c3e002248791b1d66490310130d67762254176b6d1c75437e420049144e505f1d0b725f6533557971282e720b6e5168144b7e6255444c4828191a62064520251a17417214070f697b2d18081b1a67130e22556f0043442e4c51321c327a2773440b6410261848161b2c4d515603703e1b297d551921324d3678763619032f2e153b792d6e66336066707036162d4a460143407475190b4e646c3531121464491e64630c490d100d7e42090a266c786f2c191a012d7856776b082c38062e220d3f153a2c477c284b5e396443415b535000771d5a6c5f4b2a22714b33456a3d6b2a0d221568173f2c5f3b05601441611d117169111843043a6e74071d1a3011077f272b1a2624375d20145972601468511c63576b7714583c0b575f4541436a3a1d63590707276e70482e02640b5964392c3e0a7909752c6a4336467b3d4962773039336832715a1f18386939597a452c01173f3034133d026b5e4d1a5937764a1a084c51412112023c58373d2f05246a050952137b2a711b4c363e6d3f79495b5c406e61497f58413f3526005a1a433d0d6b636046131276307a1c5820361c5f3a217f0109341a55222d3c1c1f666b0f03794e623d7775077f0a463d48010b175f2a1a54553b1d3e1b08395d48277423233c68767d2c6e7c0e182806600342292b74445c590c7b046f49173c137e054b2f302618103b704e2471391d66157f05590b4941325e762b09732604743d4115194f6d67281e7372253c040e6e6730715c0c702121497f78393e54593168322d016a55470013383274782e51155561284f53654c61452234602b67481d7313510b79431f317149714667413b282b1a0a7d15134b2e060f2802101e1e6e1815501650506c786e596a541a4a1d6254483a3e46490d5778456c25051f4d2062542d1d327e792f117863307b645f054b396e0212435c0530075c65413d6a1767521c185d0477166d3d4b684b4d4b2a592c5b2e182c1d6b58267d306f086a460d0016187d531519111e43675e213f697a7e020f371f56521c63160c3b134c21515f3617294650135b0f337f781465190c3a52414c586e7f750770470a306873294b2d1f13392a1f2e685c497f2c44697b5e4f06015a430953234530323134794f1d200756341e207e3274737675375336146b10401e777743312b3c62410a5e783a260f50734c29350c5c34595e18553c2247216f136442595f4171075a4f32136a11135c457a1c431b1658593f7d7508602964367a43246e59527a7106132013745819394802095348436a46276e79424708160c5b6845376a74305d0a21014520061e4b1f123c745f156504763b20480e14097238513e5d3c59397f60365c00112b030a01176527493e72595a79222f1e4f4b1f325a1c6d574c1f4e5966277c2e36241008091d04636d26021d45417d7d4a467d3f130c267e5a0b713f387251160b150b2f352a0e4c10761c3425535024114832220f4b16246d5d4c0146481a28502c37784665617b0476650f451d7862723b760547145c485d1f4e18490f35113413756f63736060244c2e793838082848727172180c1e5d3c1c5d5031381b3731016f6068175c497b051a3e331406334f780a5f1c5733610850670d4e4312735304321c4c39667c2972462357147b35726955797d6d493f5d280d7a6260317b752f171942540d157a71223a382c09374c0b356d401a0743794f685b2833102949";

    const testVerifier = await (
        await hre.ethers.getContractFactory("TestVerifier")
    ).deploy();
    // console.log(testVerifier)

    const res = await testVerifier.verifyZKP(verifierAddr, calldata);
    console.log("res:", res);
}

async function main() {
    const [signer] = await hre.ethers.getSigners();
    // console.log(signer.address);

    compilePlonkVerifier(async function (bin: string) {
        // console.log("bin:", bin)
        const tx = await signer.sendTransaction({
            data: "0x" + bin,
        });

        // console.log(tx)
        const receipt = await tx.wait();
        // console.log("receipt:", receipt)
        const plonkVerifierAddr = receipt.contractAddress;

        await testVerifier(plonkVerifierAddr);
    });
}

main();
